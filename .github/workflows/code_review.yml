name: AI Code Review with Gemini Pro 2.5

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 拉取代码仓库
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: 🐍 安装 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 安装依赖库
      run: pip install requests

    - name: 🧩 获取当前 PR 的代码差异
      run: |
        git diff origin/${{ github.base_ref }}...HEAD > diff.txt || echo "" > diff.txt

    - name: 🤖 执行 Gemini AI 代码审查
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        python .github/scripts/code_review.py

    - name: 💬 添加 Gemini Inline 行评论
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require("fs");
          const comments = JSON.parse(fs.readFileSync("inline_comments.json", "utf8"));
          const prNumber = context.payload.pull_request.number;
          const headSha = context.payload.pull_request.head.sha;

          for (const comment of comments) {
            try {
              await github.rest.pulls.createReviewComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                commit_id: headSha,
                path: comment.path,
                position: comment.position,
                body: comment.body
              });
            } catch (e) {
              console.log("❌ 评论失败:", comment.path, comment.position, e.message);
            }
          }

    - name: 📝 添加 PR 顶部总结评论
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require("fs");
          const body = fs.readFileSync("review_output.txt", "utf8");
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body
          });
